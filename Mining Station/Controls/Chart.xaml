<UserControl
    x:Class="Mining_Station.Chart"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:Mining_Station"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:oxy="http://oxyplot.org/wpf"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <ScrollViewer Grid.Column="0">
            <DataGrid
                x:Name="DataGridCoins"
                Padding="0,5,0,5"
                AutoGenerateColumns="False"
                Background="White"
                BorderThickness="0"
                CanUserAddRows="False"
                GridLinesVisibility="None"
                HeadersVisibility="Column"
                ItemsSource="{Binding Coins}"
                Tag="{Binding ElementName=TheMainWindow, Path=DataContext}">
                <DataGrid.ContextMenu>
                    <ContextMenu x:Name="ChartLegendMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                        <MenuItem
                            Command="{Binding PlacementTarget.Tag.LineSeriesSelectAll, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                            CommandParameter="{Binding}"
                            Header="Select All" />
                        <MenuItem
                            Command="{Binding PlacementTarget.Tag.LineSeriesSelectNone, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                            CommandParameter="{Binding}"
                            Header="Select None" />
                        <MenuItem Header="Display Coin As">
                            <MenuItem Header="Name" IsCheckable="True" />
                            <MenuItem Header="SYMBOL" IsCheckable="True" />
                            <MenuItem Header="Name (SYMBOL)" IsCheckable="True" />
                            <i:Interaction.Behaviors>
                                <local:DisplayCoinAsMenuBehavior Option="{Binding DisplayCoinAs, Mode=TwoWay}" />
                            </i:Interaction.Behaviors>
                        </MenuItem>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Resources>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                    <Style x:Key="ColumnStyle" TargetType="TextBlock">
                        <Setter Property="Margin" Value="10,1,10,1" />
                    </Style>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                        </Style.Resources>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Color" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Viewbox
                                        Width="20"
                                        Margin="5,0"
                                        VerticalAlignment="Center">
                                        <Path
                                            VerticalAlignment="Center"
                                            Fill="{Binding Value.Color}"
                                            Stroke="{Binding Value.Color}"
                                            StrokeEndLineCap="Round"
                                            StrokeStartLineCap="Round"
                                            StrokeThickness="2">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <LineGeometry StartPoint="1,4" EndPoint="22,4" />
                                                    <EllipseGeometry
                                                        Center="11,4"
                                                        RadiusX="3"
                                                        RadiusY="3" />
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </Viewbox>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Coin" SortMemberPath="Key">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox Margin="5,2,15,2" IsChecked="{Binding Value.IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <CheckBox.Style>
                                        <Style TargetType="CheckBox">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=DataGridCoins, Path=DataContext.DisplayCoinAs}" Value="Name">
                                                    <Setter Property="Content" Value="{Binding Value.Name}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=DataGridCoins, Path=DataContext.DisplayCoinAs}" Value="SYMBOL">
                                                    <Setter Property="Content" Value="{Binding Value.Symbol}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=DataGridCoins, Path=DataContext.DisplayCoinAs}" Value="Name (SYMBOL)">
                                                    <Setter Property="Content" Value="{Binding Value.NameAndSymbol}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                        Binding="{Binding Value.TotalProfit, StringFormat={}{0:N2}}"
                        ElementStyle="{StaticResource ColumnStyle}"
                        Header="Total, USD"
                        IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
        </ScrollViewer>
        <Grid Grid.Column="1" Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="35" />
            </Grid.RowDefinitions>
            <oxy:PlotView
                x:Name="PlotChart"
                Grid.Row="0"
                Grid.Column="0"
                Margin="10"
                Loaded="PlotChart_Loaded"
                Model="{Binding PlotModel}"
                Unloaded="PlotChart_Unloaded" />
            <local:RangeSlider
                x:Name="RangeSliderHorizontal"
                Grid.Row="1"
                Grid.Column="0"
                Margin="52,8,8,13"
                Cursor="SizeWE"
                RangeSelectionChanged="RangeSliderHorizontal_RangeSelectionChanged"
                RangeStart="0"
                RangeStartSelected="{Binding HorizontalRangeStart, Mode=TwoWay}"
                RangeStop="100"
                RangeStopSelected="{Binding HorizontalRangeStop, Mode=TwoWay}" />
            <local:RangeSlider
                x:Name="RangeSliderVertical"
                Grid.Row="0"
                Grid.Column="1"
                Margin="8,19,18,25"
                Cursor="SizeNS"
                RangeSelectionChanged="RangeSliderVertical_RangeSelectionChanged"
                RangeStart="0"
                RangeStartSelected="0"
                RangeStop="100"
                RangeStopSelected="100">
                <local:RangeSlider.LayoutTransform>
                    <RotateTransform Angle="-90" />
                </local:RangeSlider.LayoutTransform>
            </local:RangeSlider>
            <Button
                x:Name="ResetButton"
                Grid.Row="1"
                Grid.Column="1"
                Margin="5,5,15,13"
                Click="ResetButton_Click">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Viewbox>
                                        <Grid>
                                            <Ellipse x:Name="ClickArea" Fill="Transparent" />
                                            <Path
                                                x:Name="ResetPath"
                                                Data="F1 M 38,20.5833C 42.9908,20.5833 47.4912,22.6825 50.6667,26.046L 50.6667,17.4167L 55.4166,22.1667L 55.4167,34.8333L 42.75,34.8333L 38,30.0833L 46.8512,30.0833C 44.6768,27.6539 41.517,26.125 38,26.125C 31.9785,26.125 27.0037,30.6068 26.2296,36.4167L 20.6543,36.4167C 21.4543,27.5397 28.9148,20.5833 38,20.5833 Z M 38,49.875C 44.0215,49.875 48.9963,45.3932 49.7703,39.5833L 55.3457,39.5833C 54.5457,48.4603 47.0852,55.4167 38,55.4167C 33.0092,55.4167 28.5088,53.3175 25.3333,49.954L 25.3333,58.5833L 20.5833,53.8333L 20.5833,41.1667L 33.25,41.1667L 38,45.9167L 29.1487,45.9167C 31.3231,48.3461 34.483,49.875 38,49.875 Z "
                                                Fill="{StaticResource DarkBlue}"
                                                Stretch="Fill" />
                                        </Grid>
                                    </Viewbox>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ResetPath" Property="Fill" Value="{StaticResource MouseOver}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Grid>
</UserControl>
